/*$T MATTS/cTopologyList.cpp GC 1.140 07/01/09 21:12:09 */
/*
 * ;
 * Name: cTopologyList.cpp ;
 * Last Modified: 20/01/05 ;
 * ;
 * Purpose: Implementation file for Topology list class ;
 */
#include "cTopologyList.h"

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */

cTopologyList::cTopologyList () : cList() {
	psHead = NULL;
	psTail = NULL;
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
cTopologyList::~cTopologyList () {
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
cTopologyNode* cTopologyList::newNode (int nNodeID) {
	cTopologyNode*	psNode;

	if (nNodeID < 0) {
		nNodeID = nNextID;
	}

	nNextID = MAX((nNodeID + 1), nNextID);

	psNode = new cTopologyNode (nNodeID);
	psNode->next = NULL;

	if (psHead) {
		psTail->next = psNode;
		psNode->previous = psTail;
		psTail = psNode;
	} else {

		/* List empty */
		psHead = psNode;
		psTail = psNode;
		psNode->previous = NULL;
	}

	nCount++;

	return psNode;
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
char const * cTopologyList::getName (cTopologyNode* psCurrent) {
	return psCurrent->PropertyGetString ("Name");
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getXPos (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fXPos : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getYPos (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fYPos : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getZPos (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fZPos : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getXRot (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fXRot : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getYRot (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fYRot : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getZRot (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fZRot : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getXScale (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fXScale : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getYScale (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fYScale : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
float cTopologyList::getZScale (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->fZScale : 0.0f);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
int cTopologyList::getCol (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->nCol : 0);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
int cTopologyList::getAnalyseCol (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->nAnalyseCol : 0);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
int cTopologyList::getShape (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->nShape : 0);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
int cTopologyList::getType (cTopologyNode* psCurrent) {
	return (psCurrent ? psCurrent->PropertyGetOptionEnum ("Type") : 0);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
cTopologyNode* cTopologyList::getCurrentNode (cTopologyNode* psCurrent) {
	return psCurrent;
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
cTopologyLink* cTopologyList::getLinksOut (cTopologyNode* psCurrent) {
	return (psCurrent->pLinksOut);
}

/*
 =======================================================================================================================
 *  TODO:
 =======================================================================================================================
 */
cTopologyLink* cTopologyList::getLinksIn (cTopologyNode* psCurrent) {
	return (psCurrent->pLinksIn);
}
